{"ast":null,"code":"import whiteLogo from '../../assets/white-pawn.png';\nimport blackLogo from '../../assets/black-pawn.png';\nimport { Colors, FigureNames } from \"../../consts\";\nimport { Figure } from \"../figure\";\nexport class Pawn extends Figure {\n  constructor(color, cell) {\n    super(color, cell);\n    this.logo = this.color === Colors.WHITE ? whiteLogo : blackLogo;\n    this.figureName = FigureNames.PAWN;\n  }\n\n  canMove(target) {\n    if (!super.canMove(target)) {\n      return false;\n    }\n\n    if (target.x !== this.cell.x) {\n      return false;\n    }\n\n    if (this.color === Colors.WHITE && this.cell.y - target.y === 1) {\n      return true;\n    }\n\n    if (this.color === Colors.BLACK && target.y - this.cell.y === 1) {\n      return true;\n    }\n\n    if (this.isItsHalf(this.cell.y, this.color)) {\n      return;\n    }\n\n    return false;\n  }\n\n  isItsHalf(coordY, color) {\n    if (color === Colors.WHITE) {\n      return coordY > 3;\n    } else {\n      return coordY < 4;\n    }\n  }\n\n}","map":{"version":3,"names":["whiteLogo","blackLogo","Colors","FigureNames","Figure","Pawn","constructor","color","cell","logo","WHITE","figureName","PAWN","canMove","target","x","y","BLACK","isItsHalf","coordY"],"sources":["/Users/alextsukanov/my-projects/chess/src/models/figures/pawn.ts"],"sourcesContent":["import whiteLogo from '../../assets/white-pawn.png';\nimport blackLogo from '../../assets/black-pawn.png';\n\nimport { Colors, FigureNames } from \"../../consts\";\nimport { Cell } from \"../cell\";\nimport { Figure } from \"../figure\";\n\nexport class Pawn extends Figure {\n    constructor(color: Colors, cell: Cell) {\n        super(color, cell);\n        this.logo = this.color === Colors.WHITE ? whiteLogo : blackLogo;\n        this.figureName = FigureNames.PAWN;\n    }\n\n    public canMove(target: Cell): boolean {\n        if (!super.canMove(target)) {\n            return false;\n        }\n        if (target.x !== this.cell.x) {\n            return false;\n        }\n        if (this.color === Colors.WHITE && this.cell.y - target.y === 1) {\n            return true;\n        }\n        if (this.color === Colors.BLACK && target.y - this.cell.y === 1) {\n            return true;\n        }\n        if (this.isItsHalf(this.cell.y, this.color)) {\n            return \n        }\n        return false;\n    }\n\n    private isItsHalf(coordY: number, color: Colors): boolean {\n        if (color === Colors.WHITE) {\n            return coordY > 3;\n        } else {\n            return coordY < 4;\n        }\n    }\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,IAAN,SAAmBD,MAAnB,CAA0B;EAC7BE,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAA4B;IACnC,MAAMD,KAAN,EAAaC,IAAb;IACA,KAAKC,IAAL,GAAY,KAAKF,KAAL,KAAeL,MAAM,CAACQ,KAAtB,GAA8BV,SAA9B,GAA0CC,SAAtD;IACA,KAAKU,UAAL,GAAkBR,WAAW,CAACS,IAA9B;EACH;;EAEMC,OAAO,CAACC,MAAD,EAAwB;IAClC,IAAI,CAAC,MAAMD,OAAN,CAAcC,MAAd,CAAL,EAA4B;MACxB,OAAO,KAAP;IACH;;IACD,IAAIA,MAAM,CAACC,CAAP,KAAa,KAAKP,IAAL,CAAUO,CAA3B,EAA8B;MAC1B,OAAO,KAAP;IACH;;IACD,IAAI,KAAKR,KAAL,KAAeL,MAAM,CAACQ,KAAtB,IAA+B,KAAKF,IAAL,CAAUQ,CAAV,GAAcF,MAAM,CAACE,CAArB,KAA2B,CAA9D,EAAiE;MAC7D,OAAO,IAAP;IACH;;IACD,IAAI,KAAKT,KAAL,KAAeL,MAAM,CAACe,KAAtB,IAA+BH,MAAM,CAACE,CAAP,GAAW,KAAKR,IAAL,CAAUQ,CAArB,KAA2B,CAA9D,EAAiE;MAC7D,OAAO,IAAP;IACH;;IACD,IAAI,KAAKE,SAAL,CAAe,KAAKV,IAAL,CAAUQ,CAAzB,EAA4B,KAAKT,KAAjC,CAAJ,EAA6C;MACzC;IACH;;IACD,OAAO,KAAP;EACH;;EAEOW,SAAS,CAACC,MAAD,EAAiBZ,KAAjB,EAAyC;IACtD,IAAIA,KAAK,KAAKL,MAAM,CAACQ,KAArB,EAA4B;MACxB,OAAOS,MAAM,GAAG,CAAhB;IACH,CAFD,MAEO;MACH,OAAOA,MAAM,GAAG,CAAhB;IACH;EACJ;;AAhC4B"},"metadata":{},"sourceType":"module"}