{"ast":null,"code":"import { FigureNames } from \"../consts\";\nexport class Figure {\n  constructor(color, cell) {\n    this.logo = void 0;\n    this.color = void 0;\n    this.cell = void 0;\n    this.figureName = void 0;\n    this.id = void 0;\n    this.color = color;\n    this.cell = cell;\n    this.cell.currentFigure = this;\n    this.logo = null;\n    this.id = Math.random();\n  }\n\n  canMove(target) {\n    var _target$currentFigure, _target$currentFigure2;\n\n    if (target.x === this.cell.x && target.y === this.cell.y) {\n      return false;\n    }\n\n    if (((_target$currentFigure = target.currentFigure) === null || _target$currentFigure === void 0 ? void 0 : _target$currentFigure.color) === this.color) {\n      return false;\n    }\n\n    if (((_target$currentFigure2 = target.currentFigure) === null || _target$currentFigure2 === void 0 ? void 0 : _target$currentFigure2.figureName) === FigureNames.KING) {\n      return false;\n    }\n\n    return true;\n  }\n\n  move(target) {\n    this.cell.currentFigure = null;\n    this.cell = target;\n    this.cell.currentFigure = this;\n  }\n\n  canMoveLines(target) {\n    return this.cell.isEmptyVertical(target) || this.cell.isEmptyHorizontal(target);\n  }\n\n  canMoveDiagonals(target) {\n    return this.cell.isEmptyDiagonal(target);\n  }\n\n}","map":{"version":3,"names":["FigureNames","Figure","constructor","color","cell","logo","figureName","id","currentFigure","Math","random","canMove","target","x","y","KING","move","canMoveLines","isEmptyVertical","isEmptyHorizontal","canMoveDiagonals","isEmptyDiagonal"],"sources":["/Users/alextsukanov/my-projects/chess/src/models/figure.ts"],"sourcesContent":["import { Colors, FigureNames } from \"../consts\";\nimport { Cell } from \"./cell\";\nimport logo from '../../assets/black-bishop.png'\n\nexport class Figure {\n    logo: typeof logo | null;\n    color: Colors\n    cell: Cell;\n    figureName?: FigureNames;\n    id: number;\n\n    constructor(color: Colors, cell: Cell) {\n        this.color = color;\n        this.cell = cell;\n        this.cell.currentFigure = this;\n        this.logo = null;\n        this.id = Math.random();\n    }\n\n    public canMove(target: Cell): boolean {\n        if (target.x === this.cell.x && target.y === this.cell.y) {\n            return false;\n        }\n        if (target.currentFigure?.color === this.color) {\n            return false;\n        }\n        if (target.currentFigure?.figureName === FigureNames.KING) {\n            return false;\n        }\n        return true;\n    }\n\n    public move(target: Cell) {\n        this.cell.currentFigure = null; \n        this.cell = target;\n        this.cell.currentFigure = this;\n    }\n\n    protected canMoveLines(target: Cell): boolean {\n        return this.cell.isEmptyVertical(target) || this.cell.isEmptyHorizontal(target);\n    }\n\n    protected canMoveDiagonals(target: Cell): boolean {\n        return this.cell.isEmptyDiagonal(target);\n    }\n}"],"mappings":"AAAA,SAAiBA,WAAjB,QAAoC,WAApC;AAIA,OAAO,MAAMC,MAAN,CAAa;EAOhBC,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAA4B;IAAA,KANvCC,IAMuC;IAAA,KALvCF,KAKuC;IAAA,KAJvCC,IAIuC;IAAA,KAHvCE,UAGuC;IAAA,KAFvCC,EAEuC;IACnC,KAAKJ,KAAL,GAAaA,KAAb;IACA,KAAKC,IAAL,GAAYA,IAAZ;IACA,KAAKA,IAAL,CAAUI,aAAV,GAA0B,IAA1B;IACA,KAAKH,IAAL,GAAY,IAAZ;IACA,KAAKE,EAAL,GAAUE,IAAI,CAACC,MAAL,EAAV;EACH;;EAEMC,OAAO,CAACC,MAAD,EAAwB;IAAA;;IAClC,IAAIA,MAAM,CAACC,CAAP,KAAa,KAAKT,IAAL,CAAUS,CAAvB,IAA4BD,MAAM,CAACE,CAAP,KAAa,KAAKV,IAAL,CAAUU,CAAvD,EAA0D;MACtD,OAAO,KAAP;IACH;;IACD,IAAI,0BAAAF,MAAM,CAACJ,aAAP,gFAAsBL,KAAtB,MAAgC,KAAKA,KAAzC,EAAgD;MAC5C,OAAO,KAAP;IACH;;IACD,IAAI,2BAAAS,MAAM,CAACJ,aAAP,kFAAsBF,UAAtB,MAAqCN,WAAW,CAACe,IAArD,EAA2D;MACvD,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH;;EAEMC,IAAI,CAACJ,MAAD,EAAe;IACtB,KAAKR,IAAL,CAAUI,aAAV,GAA0B,IAA1B;IACA,KAAKJ,IAAL,GAAYQ,MAAZ;IACA,KAAKR,IAAL,CAAUI,aAAV,GAA0B,IAA1B;EACH;;EAESS,YAAY,CAACL,MAAD,EAAwB;IAC1C,OAAO,KAAKR,IAAL,CAAUc,eAAV,CAA0BN,MAA1B,KAAqC,KAAKR,IAAL,CAAUe,iBAAV,CAA4BP,MAA5B,CAA5C;EACH;;EAESQ,gBAAgB,CAACR,MAAD,EAAwB;IAC9C,OAAO,KAAKR,IAAL,CAAUiB,eAAV,CAA0BT,MAA1B,CAAP;EACH;;AAxCe"},"metadata":{},"sourceType":"module"}