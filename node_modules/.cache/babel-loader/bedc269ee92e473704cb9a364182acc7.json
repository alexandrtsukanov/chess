{"ast":null,"code":"import whiteLogo from '../../assets/white-pawn.png';\nimport blackLogo from '../../assets/black-pawn.png';\nimport { Colors, FigureNames } from \"../../consts\";\nimport { Figure } from \"../figure\";\nexport class Pawn extends Figure {\n  constructor(color, cell) {\n    super(color, cell);\n    this.logo = this.color === Colors.WHITE ? whiteLogo : blackLogo;\n    this.figureName = FigureNames.PAWN;\n  }\n\n  canMove(target) {\n    if (!super.canMove(target)) {\n      return false;\n    }\n\n    if (target.x !== this.cell.x) {\n      return false;\n    }\n\n    if (this.color === Colors.WHITE) {\n      if (this.cell.y - target.y === 1) {\n        return true;\n      }\n\n      if (this.isItsHalf(this.cell.y, this.color)) {\n        return this.cell.y - target.y === 2;\n      } // if (this.canEat(this.cell.x, this.cell.y - 1, target, Colors.BLACK)) {\n      //     return true;\n      // }\n\n    }\n\n    if (this.color === Colors.BLACK) {\n      if (target.y - this.cell.y === 1) {\n        return true;\n      }\n\n      if (this.isItsHalf(this.cell.y, this.color)) {\n        return target.y - this.cell.y === 2;\n      }\n\n      if (this.canEat(this.cell.x, this.cell.y + 1, target, Colors.WHITE)) {\n        return true;\n      }\n    }\n\n    if (target.x !== this.cell.x) {\n      return false;\n    }\n\n    return false;\n  }\n\n  isItsHalf(coordY, color) {\n    if (color === Colors.WHITE) {\n      return coordY > 3;\n    } else {\n      return coordY < 4;\n    }\n  }\n\n  canEat(coordX, nextY, target, oppositeColor) {\n    var _target$currentFigure;\n\n    const result = target.y === nextY && (target.x === coordX - 1 || target.x === coordX + 1) && ((_target$currentFigure = target.currentFigure) === null || _target$currentFigure === void 0 ? void 0 : _target$currentFigure.color) === oppositeColor;\n    return result;\n  }\n\n}","map":{"version":3,"names":["whiteLogo","blackLogo","Colors","FigureNames","Figure","Pawn","constructor","color","cell","logo","WHITE","figureName","PAWN","canMove","target","x","y","isItsHalf","BLACK","canEat","coordY","coordX","nextY","oppositeColor","result","currentFigure"],"sources":["/Users/alextsukanov/my-projects/chess/src/models/figures/pawn.ts"],"sourcesContent":["import whiteLogo from '../../assets/white-pawn.png';\nimport blackLogo from '../../assets/black-pawn.png';\n\nimport { Colors, FigureNames } from \"../../consts\";\nimport { Cell } from \"../cell\";\nimport { Figure } from \"../figure\";\n\nexport class Pawn extends Figure {\n    constructor(color: Colors, cell: Cell) {\n        super(color, cell);\n        this.logo = this.color === Colors.WHITE ? whiteLogo : blackLogo;\n        this.figureName = FigureNames.PAWN;\n    }\n\n    public canMove(target: Cell): boolean {\n        if (!super.canMove(target)) {\n            return false;\n        }\n        if (target.x !== this.cell.x) {\n            return false;\n        }\n        if (this.color === Colors.WHITE) {\n            if (this.cell.y - target.y === 1) {\n                return true;\n            }\n            if (this.isItsHalf(this.cell.y, this.color)) {\n                return this.cell.y - target.y === 2;\n            }\n            // if (this.canEat(this.cell.x, this.cell.y - 1, target, Colors.BLACK)) {\n            //     return true;\n            // }\n        }\n        if (this.color === Colors.BLACK) {\n            if (target.y - this.cell.y === 1) {\n                return true;\n            }\n            if (this.isItsHalf(this.cell.y, this.color)) {\n                return target.y - this.cell.y === 2;\n            }\n            if (this.canEat(this.cell.x, this.cell.y + 1, target, Colors.WHITE)) {\n                return true;\n            }\n        }\n        if (target.x !== this.cell.x) {\n            return false;\n        }\n        return false;\n    }\n\n    private isItsHalf(coordY: number, color: Colors): boolean {\n        if (color === Colors.WHITE) {\n            return coordY > 3;\n        } else {\n            return coordY < 4;\n        }\n    }\n\n    private canEat(coordX: number, nextY: number, target: Cell, oppositeColor: Colors): boolean {\n        const result = target.y === nextY && \n        (target.x === coordX - 1 || target.x === coordX + 1) && \n        target.currentFigure?.color === oppositeColor;\n        return result;\n    }\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAO,MAAMC,IAAN,SAAmBD,MAAnB,CAA0B;EAC7BE,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAA4B;IACnC,MAAMD,KAAN,EAAaC,IAAb;IACA,KAAKC,IAAL,GAAY,KAAKF,KAAL,KAAeL,MAAM,CAACQ,KAAtB,GAA8BV,SAA9B,GAA0CC,SAAtD;IACA,KAAKU,UAAL,GAAkBR,WAAW,CAACS,IAA9B;EACH;;EAEMC,OAAO,CAACC,MAAD,EAAwB;IAClC,IAAI,CAAC,MAAMD,OAAN,CAAcC,MAAd,CAAL,EAA4B;MACxB,OAAO,KAAP;IACH;;IACD,IAAIA,MAAM,CAACC,CAAP,KAAa,KAAKP,IAAL,CAAUO,CAA3B,EAA8B;MAC1B,OAAO,KAAP;IACH;;IACD,IAAI,KAAKR,KAAL,KAAeL,MAAM,CAACQ,KAA1B,EAAiC;MAC7B,IAAI,KAAKF,IAAL,CAAUQ,CAAV,GAAcF,MAAM,CAACE,CAArB,KAA2B,CAA/B,EAAkC;QAC9B,OAAO,IAAP;MACH;;MACD,IAAI,KAAKC,SAAL,CAAe,KAAKT,IAAL,CAAUQ,CAAzB,EAA4B,KAAKT,KAAjC,CAAJ,EAA6C;QACzC,OAAO,KAAKC,IAAL,CAAUQ,CAAV,GAAcF,MAAM,CAACE,CAArB,KAA2B,CAAlC;MACH,CAN4B,CAO7B;MACA;MACA;;IACH;;IACD,IAAI,KAAKT,KAAL,KAAeL,MAAM,CAACgB,KAA1B,EAAiC;MAC7B,IAAIJ,MAAM,CAACE,CAAP,GAAW,KAAKR,IAAL,CAAUQ,CAArB,KAA2B,CAA/B,EAAkC;QAC9B,OAAO,IAAP;MACH;;MACD,IAAI,KAAKC,SAAL,CAAe,KAAKT,IAAL,CAAUQ,CAAzB,EAA4B,KAAKT,KAAjC,CAAJ,EAA6C;QACzC,OAAOO,MAAM,CAACE,CAAP,GAAW,KAAKR,IAAL,CAAUQ,CAArB,KAA2B,CAAlC;MACH;;MACD,IAAI,KAAKG,MAAL,CAAY,KAAKX,IAAL,CAAUO,CAAtB,EAAyB,KAAKP,IAAL,CAAUQ,CAAV,GAAc,CAAvC,EAA0CF,MAA1C,EAAkDZ,MAAM,CAACQ,KAAzD,CAAJ,EAAqE;QACjE,OAAO,IAAP;MACH;IACJ;;IACD,IAAII,MAAM,CAACC,CAAP,KAAa,KAAKP,IAAL,CAAUO,CAA3B,EAA8B;MAC1B,OAAO,KAAP;IACH;;IACD,OAAO,KAAP;EACH;;EAEOE,SAAS,CAACG,MAAD,EAAiBb,KAAjB,EAAyC;IACtD,IAAIA,KAAK,KAAKL,MAAM,CAACQ,KAArB,EAA4B;MACxB,OAAOU,MAAM,GAAG,CAAhB;IACH,CAFD,MAEO;MACH,OAAOA,MAAM,GAAG,CAAhB;IACH;EACJ;;EAEOD,MAAM,CAACE,MAAD,EAAiBC,KAAjB,EAAgCR,MAAhC,EAA8CS,aAA9C,EAA8E;IAAA;;IACxF,MAAMC,MAAM,GAAGV,MAAM,CAACE,CAAP,KAAaM,KAAb,KACdR,MAAM,CAACC,CAAP,KAAaM,MAAM,GAAG,CAAtB,IAA2BP,MAAM,CAACC,CAAP,KAAaM,MAAM,GAAG,CADnC,KAEf,0BAAAP,MAAM,CAACW,aAAP,gFAAsBlB,KAAtB,MAAgCgB,aAFhC;IAGA,OAAOC,MAAP;EACH;;AAvD4B"},"metadata":{},"sourceType":"module"}